{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cl",
				"clf_name"
			],
			[
				"clf",
				"clfs"
			],
			[
				"tar",
				"target"
			],
			[
				"y",
				"y_train"
			],
			[
				"any",
				"any_clf"
			],
			[
				"y_",
				"y_train"
			],
			[
				"col",
				"columns"
			],
			[
				"bas",
				"base_clf"
			],
			[
				"PCA",
				"PCAWrapper"
			],
			[
				"max",
				"max_pos"
			],
			[
				"pred",
				"predictions"
			],
			[
				"num",
				"num_options"
			],
			[
				"var",
				"var_options"
			],
			[
				"va",
				"var_cols"
			],
			[
				"X_",
				"X_filtered"
			],
			[
				"re",
				"remove_index"
			],
			[
				"NU",
				"NUMBER"
			],
			[
				"data",
				"data"
			],
			[
				"cat",
				"catcols"
			],
			[
				"inp",
				"inputs"
			],
			[
				"ret",
				"ret_model"
			],
			[
				"Data",
				"DataFrame"
			],
			[
				"wi",
				"weights"
			],
			[
				"pro",
				"profit"
			],
			[
				"ra",
				"rates_0"
			],
			[
				"cm",
				"cm_table"
			],
			[
				"Xt",
				"X_train"
			],
			[
				"A",
				"A"
			],
			[
				"date",
				"dates_3"
			],
			[
				"ou",
				"outliers"
			],
			[
				"uni",
				"unique"
			],
			[
				"uniq",
				"test_unique_values"
			],
			[
				"df",
				"df"
			],
			[
				"ran",
				"random"
			],
			[
				"ds",
				"ds"
			],
			[
				"numer",
				"numberical"
			],
			[
				"Cate",
				"CATEGORY"
			],
			[
				"class",
				"classifier"
			],
			[
				"pre",
				"predict_proba"
			],
			[
				"Ma",
				"MaxProbaBag"
			],
			[
				"ba",
				"base_clf"
			],
			[
				"inputs",
				"inputs2ml"
			],
			[
				"n",
				"n_components"
			],
			[
				"add",
				"add_clf"
			],
			[
				"inpu",
				"inputs2ml"
			],
			[
				"j",
				"j"
			],
			[
				"tran",
				"train_scores"
			],
			[
				"tra",
				"train_scores"
			],
			[
				"gi",
				"grid_scores_"
			],
			[
				"para",
				"Parameters"
			],
			[
				"out",
				"outlier_rows"
			],
			[
				"ser",
				"series_or_frame"
			],
			[
				"per",
				"percentile_width"
			],
			[
				"boo",
				"bootstraped"
			],
			[
				"boot",
				"bootstrap"
			],
			[
				"ty",
				"Type"
			],
			[
				"t",
				"type"
			],
			[
				"to",
				"tolist"
			],
			[
				"me",
				"metric_wrapper"
			],
			[
				"percent",
				"percent_missing"
			],
			[
				"wh",
				"which"
			],
			[
				"train",
				"train_normal"
			],
			[
				"dat",
				"date"
			],
			[
				"titl",
				"title_fingerprint"
			],
			[
				"for",
				"format"
			],
			[
				"lege",
				"legend"
			],
			[
				"opt",
				"option"
			],
			[
				"so",
				"symbols"
			],
			[
				"T",
				"TARGET"
			],
			[
				"typ",
				"type_cols"
			],
			[
				"in",
				"inputs"
			],
			[
				"Num",
				"Number"
			],
			[
				"NUm",
				"Number"
			],
			[
				"cols",
				"cols"
			],
			[
				"fil",
				"filter"
			],
			[
				"rol",
				"role_cols"
			],
			[
				"all",
				"all_cols"
			],
			[
				"int",
				"intercept"
			],
			[
				"fill",
				"fillna"
			],
			[
				"number",
				"number_cols"
			],
			[
				"csv",
				"csv"
			],
			[
				"loa",
				"loansData"
			],
			[
				"ru",
				"running"
			],
			[
				"file",
				"filename"
			],
			[
				"y_T",
				"y_train"
			],
			[
				"MONE",
				"MONEY"
			],
			[
				"categori",
				"categorical"
			],
			[
				"X",
				"X_test"
			],
			[
				"X_T",
				"X_train"
			],
			[
				"X_t",
				"X_train"
			],
			[
				"clfs",
				"clfs"
			],
			[
				"c",
				"classifiers"
			],
			[
				"clas",
				"classifiers"
			],
			[
				"cla",
				"classifiers"
			],
			[
				"plt",
				"plt"
			],
			[
				"clasi",
				"classifier"
			],
			[
				"hist",
				"histData"
			],
			[
				"bar",
				"barWidth"
			],
			[
				"colu",
				"ColumnData"
			],
			[
				"column",
				"columnsListView"
			],
			[
				"templ",
				"template"
			],
			[
				"fun",
				"function"
			],
			[
				"Column",
				"ColumnData"
			],
			[
				"impo",
				"importances"
			],
			[
				"ense",
				"_ensembled"
			],
			[
				"sv",
				"svm_clf"
			],
			[
				"predi",
				"predict"
			],
			[
				"predic",
				"predictions"
			],
			[
				"e",
				"ensemble"
			],
			[
				"_catego",
				"_category2number"
			],
			[
				"tree",
				"tree_clf"
			],
			[
				"CA",
				"CATEGORY"
			],
			[
				"cate",
				"_category_labels"
			],
			[
				"spli",
				"splits"
			],
			[
				"_cate",
				"_category2number"
			],
			[
				"new",
				"new_cols"
			],
			[
				"ne",
				"new_cols"
			],
			[
				"sl",
				"splits"
			],
			[
				"mo",
				"money_symbols"
			],
			[
				"money",
				"money_symbol"
			],
			[
				"au",
				"auc_s"
			],
			[
				"a",
				"auc_s"
			],
			[
				"as",
				"ascending"
			],
			[
				"_in",
				"_index_final"
			],
			[
				"Tests",
				"Tests"
			],
			[
				"id",
				"idFilterCols"
			],
			[
				"nu",
				"numOfCategoriesLimit"
			],
			[
				"enco",
				"encodeCategory"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Python Virtual env",
	"command_palette":
	{
		"height": 79.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"conver",
				"Indentation: Convert to Spaces"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ena",
				"Package Control: Enable Package"
			],
			[
				"ha",
				"Set Syntax: HTML (ASP)"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Package Control: Disable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"CONVER",
				"Indentation: Convert to Tabs"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"packagre",
				"Package Control: Discover Packages"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"pac",
				"Package Control: Enable Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 435.0
	},
	"console":
	{
		"height": 155.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": true,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/danielfrg/projects/data-mining/yelp/data/training_set/review.csv",
		"/home/danielfrg/projects/data-mining/yelp/src/convert.py",
		"/home/danielfrg/projects/copper/copper.sublime-project",
		"/home/danielfrg/projects/data-mining/yelp/data/training_set/yelp_training_set_checkin.json",
		"/home/danielfrg/projects/data-mining/yelp/data/training_set/yelp_training_set_review.json",
		"/home/danielfrg/projects/data-mining/yelp/data/training_set/yelp_training_set_business.json",
		"/home/danielfrg/projects/data-mining/yelp/data/training_set/yelp_training_set_user.json",
		"/home/danielfrg/projects/data-mining/yelp/data/training_set/PaxHeader/yelp_training_set_business.json",
		"/home/danielfrg/Downloads/yelp_training_set/yelp_training_set_checkin.json",
		"/home/danielfrg/Downloads/yelp_training_set/yelp_training_set_business.json",
		"/home/danielfrg/projects/data-mining/nba/src/scrap/get_games.py",
		"/home/danielfrg/projects/data-mining/nba/src/scrap/get_teams.py",
		"/home/danielfrg/projects/copper/copper/core/compare.py",
		"/home/danielfrg/.bashrc",
		"/home/danielfrg/.starcluster/config",
		"/home/danielfrg/Downloads/node-v0.10.3-linux-x64/README.md",
		"/home/danielfrg/.starcluster/config_backup",
		"/home/danielfrg/Downloads/The Top 100 Best Fonts of All Time/list.txt",
		"/home/danielfrg/.continuum/license_academic_20130405234935.txt",
		"/home/danielfrg/.starcluster/ipcluster/ipcluster-us-east-1.json",
		"/home/danielfrg/.starcluster/plugins/pypackage-master/pypackage.py",
		"/home/danielfrg/.starcluster/config2",
		"/home/danielfrg/.ssh/known_hosts",
		"/home/danielfrg/projects/copper/copper/tests/test_compare.py",
		"/home/danielfrg/projects/copper/copper/utils/transforms.py",
		"/home/danielfrg/projects/copper/copper/utils/ml.py",
		"/home/danielfrg/projects/copper/copper/utils/frame.py",
		"/home/danielfrg/projects/copper/copper/core/estimators.py",
		"/home/danielfrg/projects/copper/copper/core/io.py",
		"/home/danielfrg/projects/copper/copper/core/set.py",
		"/home/danielfrg/projects/data-mining/test.py",
		"/home/danielfrg/.continuum/license_anacondapro_20130207155036.txt",
		"/home/danielfrg/projects/copper/copper/utils/r.py",
		"/home/danielfrg/projects/copper/copper/__init__.py",
		"/home/danielfrg/projects/copper/copper/tests/test_dataset.py",
		"/home/danielfrg/.matplotlib/matplotlibrc",
		"/home/danielfrg/projects/copper/copper/tests/test_transforms.py",
		"/home/danielfrg/projects/copper/copper/tests/test_compare_1.py",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/predict_train.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/predict_test.csv",
		"/home/danielfrg/projects/data-mining/cause-effect-pairs/data/raw/CEdata_train_pairs.csv",
		"/home/danielfrg/projects/data-mining/cause-effect-pairs/data/README.txt",
		"/home/danielfrg/projects/data-mining/titanic/data/raw/Dataset.data",
		"/home/danielfrg/projects/data-mining/titanic/data/raw/train.csv",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/sklearn/base.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/sklearn/cross_validation.py",
		"/home/danielfrg/projects/data-mining/titanic/data/pred_bag_2splits.csv",
		"/home/danielfrg/projects/data-mining/titanic/README.md",
		"/home/danielfrg/.virtualenvs/pydata/lib/python3.2/site-packages/sklearn/base.py",
		"/home/danielfrg/.virtualenvs/pydata/lib/python3.2/site-packages/sklearn/tree/tree.py",
		"/home/danielfrg/.virtualenvs/pydata/lib/python3.2/site-packages/sklearn/ensemble/forest.py",
		"/home/danielfrg/projects/copper/copper/viz/base.py",
		"/home/danielfrg/Downloads/gendermodel.py",
		"/home/danielfrg/projects/data-mining/titanic/data/pred.csv",
		"/home/danielfrg/.virtualenvs/pydata/lib/python3.2/site-packages/IPython/utils/jsonutil.py",
		"/home/danielfrg/projects/data-mining/digit-recognizer/data/train.csv",
		"/home/danielfrg/projects/copper/copper/tests/test_utils_frame.py",
		"/home/danielfrg/projects/copper/copper/tests/test_utils_ml.py",
		"/home/danielfrg/projects/data-mining/nba/README.md",
		"/home/danielfrg/projects/copper/README.md",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/cost_no_ml.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/oportunity_cost.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/profit.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/cm.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/predict_proba_train.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/predict_proba_test.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/predict_proba.csv",
		"/home/danielfrg/projects/copper/LICENSE.txt",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/pandas/core/frame.py",
		"/home/danielfrg/projects/copper/copper/tests/test_transforms_ml.py",
		"/home/danielfrg/projects/copper/copper/tests/test_ml_1.py",
		"/home/danielfrg/projects/copper/copper/tests/test_ml.py",
		"/home/danielfrg/projects/copper/copper/core/r.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/pandas/tests/test_frame.py",
		"/home/danielfrg/projects/copper/copper/tests/CopperTest.py",
		"/home/danielfrg/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/danielfrg/projects/copper/copper/core/ml.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/sklearn/svm/base.py",
		"/home/danielfrg/Downloads/pred.csv",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/sklearn/decomposition/pca.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/IPython/utils/jsonutil.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/sklearn/grid_search.py",
		"/home/danielfrg/projects/copper/test.py",
		"/home/danielfrg/projects/copper/matplotlib",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/matplotlib/mpl-data/matplotlibrc",
		"/home/danielfrg/.config/sublime-text-2/Packages/Web Inspector/Default (Linux).sublime-keymap",
		"/home/danielfrg/.config/sublime-text-2/Packages/Web Inspector/swi.sublime-settings",
		"/home/danielfrg/projects/data-mining/data-science-london/data/pred.csv",
		"/home/danielfrg/projects/data-mining/data-science-london/README.md",
		"/home/danielfrg/projects/data-mining/copper-examples/README.md",
		"/home/danielfrg/projects/data-mining/kaggle/dont-get-kicked/README.md",
		"/home/danielfrg/projects/data-mining/kaggle/bulldozers/data/valid.csv",
		"/home/danielfrg/projects/copper/copper/core/config.py",
		"/home/danielfrg/.bash_completion",
		"/home/danielfrg/projects/copper/CHANGES.txt",
		"/home/danielfrg/projects/copper/setup.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_ml_1.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_utils_ml.py",
		"/home/danielfrg/Downloads/DataGov_VHA_Hospital_Quality_of_Care_Hospital.csv",
		"/home/danielfrg/projects/copper/copper/core/ensemble.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_ml.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/pandas/tests/test_panel.py",
		"/home/danielfrg/.virtualenvs/copper/lib/python3.2/site-packages/pandas/tests/test_series.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_dataset.py",
		"/home/danielfrg/projects/copper/copper/core/transforms.py",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/predit_proba_test.csv",
		"/home/danielfrg/projects/copper/copper/tests/data/ml/1/predit_test.csv",
		"/home/danielfrg/projects/copper/copper/tests/core/test_transforms_ml.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_transforms.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_dataset_2.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_utils_frame.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_dataset_1.py",
		"/home/danielfrg/projects/copper/copper/utils/__init__.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_dataset_pandas.py",
		"/home/danielfrg/projects/copper/copper/tests/core/test_ml.py_1",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/src/assigment2.py",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/docs/data/features.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/docs/data/features_info.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/docs/data/README.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/docs/data/activity_labels.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/features.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/features_info.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/samsungData.csv",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/train/subject_train.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/test/subject_test.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/README.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/train/y_train.txt",
		"/home/danielfrg/projects/data-mining/coursera-data-analysis/assignment2/data/train/X_train.txt"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"keypair",
			"mycluster",
			"smallcluster",
			"small",
			"]'",
			"[",
			"TODO",
			"groups",
			"feature",
			"labels",
			"print",
			"y_filtered",
			"X_filtered",
			"print",
			"check_cv",
			"cross_val_score",
			"base_clf",
			"x",
			"print",
			"i",
			"option",
			"options",
			"temp",
			"options",
			"print",
			"X_filtered",
			"labels",
			"var_index",
			"columns",
			"[",
			"'[",
			"[",
			"name",
			"fillna",
			"encodestring",
			"print",
			"role",
			"1.5",
			"FRAMe",
			"FRAME",
			"data",
			"mod",
			"pca_model",
			"test_bag",
			"self.ml",
			"ML_1",
			"bootstraped",
			"assertEqual",
			"ml",
			"self",
			"Grad Boosting",
			"GNB",
			"GaussianNB",
			"Decision Tree",
			"gr_bst_clf",
			"ml",
			"ML_basic",
			"df",
			" ",
			"date",
			"data",
			".",
			"MachineLearning",
			"series",
			"copper.utils.frame",
			"series_or_frame",
			"copper.utils.frame.percent_missing(frame)",
			"ans",
			"test_fillna_single",
			"ones",
			"zeros",
			"test_fillna_single_2",
			"test_fillna",
			"role",
			"'",
			"test_cat2num",
			"'",
			"ds",
			"apply",
			"numberical",
			"get_numbers",
			"get_categories",
			"empty",
			"self.frame",
			"frame",
			"seed",
			"test_frame",
			"ans",
			"y_test",
			"X_test",
			"y_test",
			"X_test",
			"bse_clf",
			"clf",
			"base_clf",
			"BaseEstimator",
			"PCA(",
			"PCA",
			"PCA(",
			"Frame",
			"frame",
			"_y_train",
			"_X_train",
			"ans",
			"encodestring",
			"clone",
			"copy",
			"**params",
			"grid",
			"mono",
			"clone",
			"set_param",
			"gamma",
			"y_train",
			"X_train",
			"figsi",
			"proper",
			"        #",
			"\n        ",
			"join",
			"todo",
			"rel_list",
			"retList",
			"UtilsFrame",
			"add",
			"accuracy_score",
			"bootstra",
			"mse"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 37.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 222.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"sun",
				"examples/MultipleEvents/data/SUN_2009-12-10_2012-1-19.csv"
			],
			[
				"amd",
				"finance/evtstudy/data/AMD_2007-10-5_2010-1-15.csv"
			],
			[
				"oke",
				"assignment1/data/OKE.csv"
			],
			[
				"cmd",
				"assignment1/data/CMD.csv"
			],
			[
				"isr",
				"assignment1/data/ISRG.csv"
			],
			[
				"ep",
				"assignment1/data/EP.csv"
			],
			[
				"isrg",
				"assignment1/data/ISRG.csv"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/home/danielfrg/projects/data-mining/nba/nba.sublime-project"
			],
			[
				"blo",
				"/home/danielfrg/projects/blog/__source__/blog.sublime-project"
			],
			[
				"blog",
				"/home/dfrodriguez/projects/blog/blog.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true
}
